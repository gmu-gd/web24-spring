<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-19T14:52:19-05:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">Build a Web Page</title><link href="http://localhost:4000/tutorials/t1/" rel="alternate" type="text/html" title="Build a Web Page" /><published>2024-01-18T00:00:00-05:00</published><updated>2024-01-18T00:00:00-05:00</updated><id>http://localhost:4000/tutorials/t1</id><content type="html" xml:base="http://localhost:4000/tutorials/t1/">&lt;p&gt;This tutorial will go through the set up every HTML page uses (steps 1–6) and how to get text to display on screen. It will also help you get &lt;em&gt;E1: 20 Questions&lt;/em&gt; started if you need some extra guidance.&lt;/p&gt;

&lt;p&gt;Note: depending on the width of your screen some text that represents code (white text with a black background) might be broken across two lines. If that happens know that the actual code is not broken across two lines, it should all be on one line. Check the screenshots at the end of each step to compare your code to the correct code.&lt;/p&gt;

&lt;h3 id=&quot;step-1-create-html-file&quot;&gt;&lt;span id=&quot;step1&quot;&gt;Step 1: Create HTML file&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Open your text editor and start a new file. To create a new file you can go to &lt;span class=&quot;command&quot;&gt;&lt;em&gt;File &amp;gt; New File&lt;/em&gt;&lt;/span&gt; or use &lt;span class=&quot;command&quot;&gt;&lt;em&gt;cmd+n&lt;/em&gt;&lt;/span&gt;. Now before you do any typing in the document you need to save the file by going to &lt;span class=&quot;command&quot;&gt;&lt;em&gt;File &amp;gt; Save&lt;/em&gt;&lt;/span&gt; or using the key command &lt;span class=&quot;command&quot;&gt;&lt;em&gt;cmd+s&lt;/em&gt;&lt;/span&gt;. When you save a file you need to name the file and give it a file type/extension. Name this file &lt;strong&gt;e1.html&lt;/strong&gt; and save it to your desktop. &lt;strong&gt;e1&lt;/strong&gt; is the file name and &lt;strong&gt;.html&lt;/strong&gt; is the file extension. Remember that you need to type the file extension so the text editor knows what kind of file it is working with.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step1.png&quot; alt=&quot;image of Atom's save screen&quot; title=&quot;Step 1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2-add-doctype&quot;&gt;&lt;span id=&quot;step2&quot;&gt;Step 2: Add doctype&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Now that your text editor knows what kind of file it is working with you can start writing in HTML. On line 1 of your document type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;. This is the document declaration type which lets the browser know which HTML specification to use to interpret the document. In this case you are writing in HTML5.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step2.png&quot; alt=&quot;image of adding the document declaration type to the document&quot; title=&quot;Step 2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3-add-html-element&quot;&gt;&lt;span id=&quot;step3&quot;&gt;Step 3: Add html element&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Now that the browser knows what HTML specification you are writing in you can start to write your HTML. The first element is going to be the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;html&lt;/code&gt; element. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;html&lt;/code&gt; element is called the root element because it contains all the elements in the document.&lt;/p&gt;

&lt;p&gt;On line 2 write the opening tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;html&amp;gt;&lt;/code&gt; and on line 3 write the closing tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;. Remember that almost every HTML element you write will have an opening tag and a closing tag.&lt;/p&gt;

&lt;p&gt;Save the document by pressing &lt;span class=&quot;command&quot;&gt;&lt;em&gt;cmd+s&lt;/em&gt;&lt;/span&gt;. Saving with the key command instead of going to &lt;span class=&quot;command&quot;&gt;&lt;em&gt;File &amp;gt; Save&lt;/em&gt;&lt;/span&gt; is going to be faster and make saving easier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step3.png&quot; alt=&quot;image of adding the html element to the document&quot; title=&quot;Step 3&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-4-add-head-element&quot;&gt;&lt;span id=&quot;step4&quot;&gt;Step 4: Add head element&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;There are a few more elements you need to add before you can start adding content to the page. Put your cursor at the end of line 2 and press &lt;span class=&quot;command&quot;&gt;&lt;em&gt;return&lt;/em&gt;&lt;/span&gt; which will add a new blank line between the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;html&lt;/code&gt; element. Now press &lt;span class=&quot;command&quot;&gt;&lt;em&gt;tab&lt;/em&gt;&lt;/span&gt; to indent the cursor one level on line 3. Indenting is an important part of coding that allows humans to quickly see the structure of a document. Now add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt; element to your page. On the indented line 3 write the opening tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; and then press &lt;span class=&quot;command&quot;&gt;&lt;em&gt;return&lt;/em&gt;&lt;/span&gt; and write the closing tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; on the indented line 4. Depending on your code editor you might need to indent the line one level yourself by pressing &lt;span class=&quot;command&quot;&gt;&lt;em&gt;tab&lt;/em&gt;&lt;/span&gt;. Once you have the opening and closing tag on the page make sure the opening and closing tags are at the same indent level as each other.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt; element contains elements that pertain to the document that are not rendered as part of the content, such as its title, style sheets, scripts, and metadata.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step4.png&quot; alt=&quot;image of adding the head element to the document&quot; title=&quot;Step 4&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-5-add-meta-and-title-elements&quot;&gt;&lt;span id=&quot;step5&quot;&gt;Step 5: Add meta and title elements&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Put your cursor at the end of line 3 and press &lt;span class=&quot;command&quot;&gt;&lt;em&gt;return&lt;/em&gt;&lt;/span&gt; which will add a new blank line between the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt; element. Depending on your text editor this might automatically indent or you might need to indent it to two levels. The indent this time is two levels because you are writing inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;On line 4 write the meta tag that specifies the character encoding used in the document &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt;. Notice this element does not have a closing tag.&lt;/p&gt;

&lt;p&gt;At the end of line 4 press &lt;span class=&quot;command&quot;&gt;&lt;em&gt;return&lt;/em&gt;&lt;/span&gt; and make sure you are two indent levels in and add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; element. This can be done all on one line and will look something like this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;title&amp;gt;E1&amp;lt;/title&amp;gt;&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; element has an opening tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;title&amp;gt;&lt;/code&gt;, some content (in this case E1), and a closing tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/title&amp;gt;&lt;/code&gt;. The title should describe the title of the page you are working on and appears in the tab of the browser which you will see once you preview the page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step5.png&quot; alt=&quot;image of adding a meta element and the title element to the document&quot; title=&quot;Step 5&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-6-add-body-element&quot;&gt;&lt;span id=&quot;step6&quot;&gt;Step 6: Add body element&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The last step before you start adding content to the page is adding the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;body&lt;/code&gt; element. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;body&lt;/code&gt; element contains everything you want to show up in the browser window.&lt;/p&gt;

&lt;p&gt;Add the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;body&lt;/code&gt; element below the closing tag of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt; element. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;body&lt;/code&gt; element needs an opening tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; and a closing tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; and should be at the same indent level as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head&lt;/code&gt; element. If you want you can leave a blank line between the opening and closing tag since you will be adding content there.&lt;/p&gt;

&lt;p&gt;If you haven’t saved since step 3 now might be a good time (&lt;span class=&quot;command&quot;&gt;&lt;em&gt;cmd+s&lt;/em&gt;&lt;/span&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step6.png&quot; alt=&quot;image of adding the body element to the document&quot; title=&quot;Step 6&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-7-add-content&quot;&gt;&lt;span id=&quot;step7&quot;&gt;Step 7: Add content&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Now that your document is setup you can start adding content. For a reference of text elements we have talked about so far, look at the Lesson 1.2 PDF on Blackboard. Remember, every piece of text you want to show up on the live page should be contained in an text element.&lt;/p&gt;

&lt;p&gt;The first bit of content you should add inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;body&lt;/code&gt; element is a some kind of main heading that tells a viewer what this page is. The best element for this is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h1&lt;/code&gt; element which is used to identify the primary heading on the page. Since you might be working on Exercise 1, perhaps your text could be &lt;em&gt;E1: 20 Questions&lt;/em&gt; and look something like this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;E1: 20 Questions&amp;lt;/h1&amp;gt;&lt;/code&gt;. Remember to include the opening tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, content (E1: 20 Questions), and closing tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/code&gt; here. This should be written on line 8, inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;body&lt;/code&gt; element, and be indented 2 levels.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step7a.png&quot; alt=&quot;image of adding an h1 element to the document&quot; title=&quot;Step 7a&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next add a heading identifying the question number, a question, and your answer to that question. Remember, the way shown below is one way to approach this but like with most things in design and coding there are many solutions.&lt;/p&gt;

&lt;p&gt;So what text element should you choose if you want text that says “Question 1”?&lt;/p&gt;

&lt;p&gt;How about an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h2&lt;/code&gt; element? Since you used an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h1&lt;/code&gt; for your primary heading using the next heading element seems like a logical choice. You can also use this heading element as many times as you want so it will work nicely as a heading element for identifying the question number.&lt;/p&gt;

&lt;p&gt;Make sure you are writing in the body element, on a new line below your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h1&lt;/code&gt; element, indented to the proper level (two levels), and write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h2&amp;gt;Question 1&amp;lt;/h2&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Don’t forget to save (&lt;span class=&quot;command&quot;&gt;&lt;em&gt;cmd+s&lt;/em&gt;&lt;/span&gt;)!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step7b.png&quot; alt=&quot;image of adding an h2 element to the document&quot; title=&quot;Step 7b&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally add the question text and your answer. Again, there are a lot of ways you could do this but here is one approach using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt; element (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt; stands for paragraph). Make sure you replace the text inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt; element below with an actual question and an actual answer. Each &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt; element should be on its own line and indented to the proper level (two levels).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;Q: This is the text for the question?&amp;lt;/p&amp;gt;&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;A: This is the answer for the question.&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step7c.png&quot; alt=&quot;image of adding a p element to the document&quot; title=&quot;Step 7c&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-8-previewing-the-page&quot;&gt;&lt;span id=&quot;step8&quot;&gt;Step 8: Previewing the page&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Now that you have a document with the proper structure and content with the proper mark up it’s time to see what the page looks like! Make sure you have saved (&lt;span class=&quot;command&quot;&gt;&lt;em&gt;cmd+s&lt;/em&gt;&lt;/span&gt;) before you preview the page or you won’t see the most current file.&lt;/p&gt;

&lt;p&gt;One way to preview your file is to find the file on your desktop and drag it into a browser or double click on it. That should open it up in your default browser. The other way is to click and drag the icon next to the file name in the top bar of the Atom window into the browser. This is a little tricky sometimes but once you get the hang of it is a lot faster. However you get the file open in the browser you should have something that looks like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/t1/step8.png&quot; alt=&quot;image of the live preview of the coded page&quot; title=&quot;Step 8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This page is using the default browser styles which for now is fine. The goal of this lesson is to create a simple HTML page with a good structure and marked up correctly. As the class goes on you will learn more about styling the page.&lt;/p&gt;

&lt;p&gt;To finish the exercise you can repeat step 7 for each new question until you have all your questions and answers all on the page.&lt;/p&gt;</content><author><name>Michael McDermott</name></author><category term="tutorials" /><summary type="html">The basic set up of a web page and adding various text elements to that page.</summary></entry><entry><title type="html">Week 2</title><link href="http://localhost:4000/due/due/" rel="alternate" type="text/html" title="Week 2" /><published>2024-01-18T00:00:00-05:00</published><updated>2024-01-18T00:00:00-05:00</updated><id>http://localhost:4000/due/due</id><content type="html" xml:base="http://localhost:4000/due/due/">&lt;h4 id=&quot;quiz-1&quot;&gt;Quiz 1&lt;/h4&gt;
&lt;p&gt;Get a 100 on the quiz&lt;/p&gt;

&lt;h4 id=&quot;exercise-1-20-questions&quot;&gt;Exercise 1: 20 Questions&lt;/h4&gt;
&lt;p&gt;Bring your finished HTML file with you to class&lt;/p&gt;

&lt;h4 id=&quot;p11-checkpoint-1&quot;&gt;P1.1: Checkpoint 1&lt;/h4&gt;
&lt;p&gt;Text chosen, split, and links highlighted. Brought to class as a PDF.&lt;/p&gt;</content><author><name>Michael McDermott</name></author><category term="due" /><summary type="html">Quiz 1 Get a 100 on the quiz</summary></entry><entry><title type="html">20 Questions</title><link href="http://localhost:4000/exercises/e1/" rel="alternate" type="text/html" title="20 Questions" /><published>2024-01-18T00:00:00-05:00</published><updated>2024-01-18T00:00:00-05:00</updated><id>http://localhost:4000/exercises/e1</id><content type="html" xml:base="http://localhost:4000/exercises/e1/">&lt;h4 id=&quot;exercise-1-20-questions&quot;&gt;Exercise 1: 20 Questions&lt;/h4&gt;

&lt;p&gt;Go to the example repository and click on E1: 20 Questions. Create a web page that answers each question asked. That means you will answer 20 questions total — 19 of your classmates questions and my question. The page will be simple and unstyled but should display the question and your answer in a clear way. You are welcome to find elements to use outside of what we talked about in class but do not style any elements. If you need a little help starting, check out &lt;a href=&quot;/tutorials/t1&quot;&gt;tutorial 1&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&quot;requirements&quot;&gt;Requirements&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; element with relevant content&lt;/li&gt;
  &lt;li&gt;a page title using a heading element&lt;/li&gt;
  &lt;li&gt;20 questions and answers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;due&quot;&gt;Due Thursday, January 25 by 1:30 PM&lt;/span&gt;&lt;/p&gt;</content><author><name>Michael McDermott</name></author><category term="exercises" /><summary type="html">Exercise 1: 20 Questions</summary></entry><entry><title type="html">Linking Narratives</title><link href="http://localhost:4000/projects/p1/" rel="alternate" type="text/html" title="Linking Narratives" /><published>2024-01-18T00:00:00-05:00</published><updated>2024-01-18T00:00:00-05:00</updated><id>http://localhost:4000/projects/p1</id><content type="html" xml:base="http://localhost:4000/projects/p1/">&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;

&lt;p&gt;The structure of a website is as equally important as the design of a website. Getting from page X to page Y needs to be intuitive and simple. This structure also needs to be reflected on the back end. Create a site that takes the user through a narrative using text, links, and multiple pages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PART 1 - CHOOSE THE TEXT&lt;/strong&gt; Pick a text that can be broken into parts (paragraphs, sentences, words, etc.). The text can be something straight forward like a news article or more abstract like a poem. The text needs to be long enough to be broken into at least 9 pages. Your final site will have 10 total pages. Page one, the home page, will be the title and author of your chosen text and then followed by at least 9 pages of the text. The final page should link back to the first page of content (the second page).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PART 2 - BUILD THE SITE&lt;/strong&gt; Now weave these distinct units together using many html pages and links. Allow for user choice, branching structures, loops, etc. The linking does not have to follow a linear sequence. See if you can produce new readings and ways of traversing your composition. When linking different parts of the composition together, think of the meaning of each link. Are they linking between similar content? Similar characters? Similar actions? Are the meaning of links consistent across all of your pages? Do you have different types of links? How could these different types of links be indicated? Remember that you cannot add words to the text, the links you create must exist in the original words.&lt;/p&gt;

&lt;p&gt;You may include additional materials in the webpages if they add meaning to your sequences of links.&lt;/p&gt;

&lt;h4 id=&quot;requirements&quot;&gt;Requirements&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;A home page with the title and author of the text&lt;/li&gt;
  &lt;li&gt;At least 9 pages with parts of the text&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; element with relevant content&lt;/li&gt;
  &lt;li&gt;Styled links with hover states&lt;/li&gt;
  &lt;li&gt;Fonts served from Google or Adobe&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;checkpoints&quot;&gt;Checkpoints&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;January 26: Start&lt;/li&gt;
  &lt;li&gt;Febraury 2: Text chosen&lt;/li&gt;
  &lt;li&gt;Febraury 9: Content marked up in 10 pages&lt;/li&gt;
  &lt;li&gt;Febraury 16: Pages linked together and styled&lt;/li&gt;
  &lt;li&gt;Febraury 23: Due&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Michael McDermott</name></author><category term="projects" /><summary type="html">The structure of a website is as equally important as the design of a website. Getting from page X to page Y needs to be intuitive and simple. This structure also needs to be reflected on the back end. Create a site that takes the user through a narrative using text, links, and multiple pages.</summary></entry><entry><title type="html">Week 1</title><link href="http://localhost:4000/due/due/" rel="alternate" type="text/html" title="Week 1" /><published>2024-01-11T00:00:00-05:00</published><updated>2024-01-11T00:00:00-05:00</updated><id>http://localhost:4000/due/due</id><content type="html" xml:base="http://localhost:4000/due/due/">&lt;h4 id=&quot;nothing&quot;&gt;Nothing&lt;/h4&gt;
&lt;p&gt;Nothing is due, it’s the first day of class!&lt;/p&gt;</content><author><name>Michael McDermott</name></author><category term="due" /><summary type="html">Nothing Nothing is due, it’s the first day of class!</summary></entry><entry><title type="html">update one</title><link href="http://localhost:4000/updates/update/" rel="alternate" type="text/html" title="update one" /><published>2024-01-11T00:00:00-05:00</published><updated>2024-01-11T00:00:00-05:00</updated><id>http://localhost:4000/updates/update</id><content type="html" xml:base="http://localhost:4000/updates/update/">&lt;p&gt;Welcome to Intro to Web Design! Please make an account on &lt;a href=&quot;https://github.com/&quot;&gt;github.com&lt;/a&gt; and if you are using your own computer download the &lt;a href=&quot;https://desktop.github.com/&quot;&gt;Github Desktop App&lt;/a&gt; and a text editor. See the &lt;a href=&quot;syllabus/&quot;&gt;syllabus&lt;/a&gt; for recommendations and guidelines for a text editor but if you don’t have one, I would recommend &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;.&lt;/p&gt;</content><author><name>Michael McDermott</name></author><category term="updates" /><summary type="html">Welcome to Intro to Web Design! Please make an account on github.com and if you are using your own computer download the Github Desktop App and a text editor. See the syllabus for recommendations and guidelines for a text editor but if you don’t have one, I would recommend Sublime Text.</summary></entry><entry><title type="html">update one</title><link href="http://localhost:4000/updates/update/" rel="alternate" type="text/html" title="update one" /><published>2024-01-09T00:00:00-05:00</published><updated>2024-01-09T00:00:00-05:00</updated><id>http://localhost:4000/updates/update</id><content type="html" xml:base="http://localhost:4000/updates/update/">&lt;p&gt;Welcome to Intro to Web Design! Please make an account on &lt;a href=&quot;https://github.com/&quot;&gt;github.com&lt;/a&gt; and if you are using your own computer download the &lt;a href=&quot;https://desktop.github.com/&quot;&gt;Github Desktop App&lt;/a&gt; and a text editor. See the &lt;a href=&quot;syllabus/&quot;&gt;syllabus&lt;/a&gt; for recommendations and guidelines for a text editor but if you don’t have one, I would recommend &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;.&lt;/p&gt;</content><author><name>Michael McDermott</name></author><category term="updates" /><summary type="html">Welcome to Intro to Web Design! Please make an account on github.com and if you are using your own computer download the Github Desktop App and a text editor. See the syllabus for recommendations and guidelines for a text editor but if you don’t have one, I would recommend Sublime Text.</summary></entry><entry><title type="html">julianne</title><link href="http://localhost:4000/student/julianne/" rel="alternate" type="text/html" title="julianne" /><published>2024-01-06T00:00:00-05:00</published><updated>2024-01-06T00:00:00-05:00</updated><id>http://localhost:4000/student/julianne</id><content type="html" xml:base="http://localhost:4000/student/julianne/"></content><author><name>Michael McDermott</name></author><category term="student" /><summary type="html"></summary></entry><entry><title type="html">kerbey</title><link href="http://localhost:4000/student/kerbey/" rel="alternate" type="text/html" title="kerbey" /><published>2024-01-06T00:00:00-05:00</published><updated>2024-01-06T00:00:00-05:00</updated><id>http://localhost:4000/student/kerbey</id><content type="html" xml:base="http://localhost:4000/student/kerbey/"></content><author><name>Michael McDermott</name></author><category term="student" /><summary type="html"></summary></entry><entry><title type="html">logan</title><link href="http://localhost:4000/student/logan/" rel="alternate" type="text/html" title="logan" /><published>2024-01-06T00:00:00-05:00</published><updated>2024-01-06T00:00:00-05:00</updated><id>http://localhost:4000/student/logan</id><content type="html" xml:base="http://localhost:4000/student/logan/"></content><author><name>Michael McDermott</name></author><category term="student" /><summary type="html"></summary></entry></feed>